Majority Pipeline Notes:
======================

Pipeline:
===========
LSH -> Distribution Evaluation (both device and error)  (done)
    -> Error rate evaluation (done)
    -> within bucket similarity evaluation (done)


LSH -> cluster -> Evaluation


LSH -> hash evaluation
    





Problems
=========
1. Now we're only using one set of buckets. Although we can tune the hash function to make error rate very low. That only means the false positive is low, how about false negative?  We still need do ground-truth validation right? Random draw devices from different buckets, and do ground-truth evaluation?

2. 





Results Log
============
0. evaluation_distribution local version3.0:
   input: LSH version 3.0
   output: evaluation_distribution version 3.0
   evaluation with three conditions and location is half-right condition

1. evaluation_pipeline version 1.0
   evaluation with only timestamp for 12m buckets
   => Good: cluster with small device (i.e. 2~4) has low error rate
   => Bad: lots of high similarity(e.g. 1.0) are still wrong


2. evaluation_pipeline version 2.0
   evaluation with only hid

3. evaluation_pipeline version 3.0
   evaluation with location --> has to avoid big cluster



Visualization:  should have a rough image of these plots
==============
1. number of users that has one/two/device....  
	(done) => should be a power law
2. percentage of users that has one/two/devices.. are wrong  
    (done) => should be an increasing curve
3. Similarity distribution for both correct and error users
   for each type of user (i.e. user with one/two/devices)
   => better than average similarity of each user type


